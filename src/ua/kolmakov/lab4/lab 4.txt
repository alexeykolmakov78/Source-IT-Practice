
1. Напишите программу, печатающую количество нулевых элементов в заданном целочисленном массиве.
2. Напишите программу, печатающую максимальный элемент непустого массива.
3. есть число int (32 бита), требуется получить массив byte[4](или 4 числа по байту)
4. есть массив byte[4] (или 4 числа по байту), необходимо получить int
5. Создать двумерный массив из 8 строк по 5 столбцов в каждой из случайных целых чисел из отрезка [10;99]. Вывести массив на экран.
6. Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать сколько раз за сутки случается так, что слева от двоеточия показывается симметричная комбинация для той, что справа от двоеточия (например, 02:20, 11:11 или 15:51).


Д\З:
1. Напишите программу, печатающую количество максимальных элементов непустого массива, в которой используется только один цикл.
2. Напишите программу, печатает массив, затем инвертирует (то есть меняет местами первый элемент с последним, второй — с предпоследним и т.д.), и вновь печатает.
3. Создать двумерный массив из случайных чисел так чтобы размер внутреннего массива был случайным. Вывести массив на экран.
4. Выведите на экран первые 11 членов последовательности Фибоначчи. Напоминаем, что первый и второй члены последовательности равны единицам, а каждый следующий — сумме двух предыдущих.
5. В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное депо заказывает в местной типографии рулон билетов с номерами от 000001 до 999999. «Счастливым» считается билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, например, в билетах с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета и теперь раздумывает, как много сувениров потребуется. С помощью программы подсчитайте сколько счастливых билетов в одном рулоне?
6*. Создайте микротест для вычисления скорости умножения посредством операторов * и >>. Для получения текущего времени используйте long System.currentTimeMillis(). Для достоверности теста нужна статистика, поэтому вычисления лучше прогнать несколько раз для получения достоверного ре

Доп заданиеЖ
1) Задан одномерный массив X[M+N]. Сформировать двумерный массив A[M][N],
   элементы которого вычисляются по следующим правилам:
   M - элементы с четной суммой индексов массива А:
   N - элементы с нечетной суммой индексов массива А:
   сумма индексов 0+0 считается четной.


2) Создать двумерный массив из 6 строк по 7 столбцов в каждой из случайных целых чисел из отрезка [0;9]. Вывести массив на экран.
Преобразовать массив таким образом, чтобы на первом месте в каждой строке стоял её наибольший элемент.
При этом изменять состав массива нельзя, а можно только переставлять элементы в рамках одной строки.


Порядок остальных элементов строки не важен (т.е. можно соврешить только одну перестановку, а можно отсортировать по убыванию каждую строку). Вывести преобразованный массив на экран.
2a)Для проверки остаточных знаний учеников после летних каникул, учитель младших классов решил начинать каждый урок с того, чтобы задавать каждому ученику пример из таблицы умножения,
но в классе 15 человек, а примеры среди них не должны повторяться. В помощь учителю напишите программу, которая будет выводить на экран 15 случайных примеров из таблицы умножения
(от 2*2 до 9*9, потому что задания по умножению на 1 и на 10 — слишком просты). При этом среди 15 примеров не должно быть повторяющихся (примеры 2*3 и 3*2 и им подобные пары считать повторяющимися).
3) Имеется массив String[] a, в котором хранятся числа. Требуется преобразовать его в двумерный массив int[][] c, потом найдите сумму каждой цифры этих чисел.
4) Создать двумерный массив из 8 строк по 5 столбцов в каждой из случайных целых чисел из отрезка [10;99]. Вывести массив на экран только четные строки и столбцы (включая первыую строку и столбец) (сделать несколько способов вывода)ю
5) Есть массив, заполненниы слцчайными числами до 100. Вывести количество значений в жиапазонах: 10-20, 30-40, 40-50.
6) Загадуем число от 0 до 100. У вас есть семь попыток на угадывание.
При каждой попытке будет выводиться сообщение - "Мало" или "Много". Если угадаете, уложившись в семь попыток, то выиграли. Если нет, Выводим сообщение и снова загадываем и повторяем все снова
Для генерации секретного числа и чтения с консоли используете код:
Random r = new Random();
int secret = r.nextInt(100) + 1;
int i = System.in.read();