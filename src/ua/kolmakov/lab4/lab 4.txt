
1. Напишите программу, печатающую количество нулевых элементов в заданном целочисленном массиве.
2. Напишите программу, печатающую максимальный элемент непустого массива.
3. есть число int (32 бита), требуется получить массив byte[4](или 4 числа по байту)
4. есть массив byte[4] (или 4 числа по байту), необходимо получить int
5. Создать двумерный массив из 8 строк по 5 столбцов в каждой из случайных целых чисел из отрезка [10;99]. Вывести массив на экран.
6. Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать сколько раз за сутки случается так, что слева от двоеточия показывается симметричная комбинация для той, что справа от двоеточия (например, 02:20, 11:11 или 15:51).


Д\З:
1. Напишите программу, печатающую количество максимальных элементов непустого массива, в которой используется только один цикл.
2. Напишите программу, печатает массив, затем инвертирует (то есть меняет местами первый элемент с последним, второй — с предпоследним и т.д.), и вновь печатает.
3. Создать двумерный массив из случайных чисел так чтобы размер внутреннего массива был случайным. Вывести массив на экран.
4. Выведите на экран первые 11 членов последовательности Фибоначчи. Напоминаем, что первый и второй члены последовательности равны единицам, а каждый следующий — сумме двух предыдущих.
5. В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное депо заказывает в местной типографии рулон билетов с номерами от 000001 до 999999. «Счастливым» считается билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, например, в билетах с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета и теперь раздумывает, как много сувениров потребуется. С помощью программы подсчитайте сколько счастливых билетов в одном рулоне?
6*. Создайте микротест для вычисления скорости умножения посредством операторов * и >>. Для получения текущего времени используйте long System.currentTimeMillis(). Для достоверности теста нужна статистика, поэтому вычисления лучше прогнать несколько раз для получения достоверного результата.
